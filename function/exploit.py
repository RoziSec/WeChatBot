#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @File : exploit.py
# @Author : Norah C.IV
# @Time : 2022/10/10 22:12
# @Software: PyCharm
import requests
import re

from config.read_config import ReadConfig
from lib.uuid import RandomId
from lib.log import logger


class Exploit(object):
    @staticmethod
    def get_exp():
        url = ReadConfig.from_dict('exploit', 'url')
        response = requests.get(url).content.decode('utf-8')

        title_data = re.findall('<title>(.*?)</title>', response)
        title_data.pop(0)

        url_data = re.findall("<guid isPermaLink='true'>(.*?)</guid>", response)

        for i in range(0, len(url_data)):
            method = ''
            uuid = RandomId.random_id()  # 生成随机uuid值
            # print('编号：' + uuid)
            # print('名称：' + title_data[i])
            if '[webapps]' in title_data[i]:
                method = 'Web'
            elif '[remote]' in title_data[i]:
                method = '远程'
            elif '[local]' in title_data[i]:
                method = '本地'
            else:
                method = '其他'
            # print('类型：' + method)
            # print('地址：' + url_data[i])
            # print('')
            Exploit.insert(uuid, method, title_data[i], url_data[i])
            i += 1

    @staticmethod
    def insert(num, methods, poc_name, url):
        from lib.dbSQLite import DBTool

        db = DBTool()
        query_repeated_ob = [url]
        query_repeated = 'select count(*) from exploit where url = ?'

        result = db.executeQuery(query_repeated, query_repeated_ob)

        for count in result.fetchall():
            if str(count[0]) == '0':
                insert_exploit_ob = [(num, methods, poc_name, url)]
                insert_exploit = 'insert into exploit values (?, ?, ?, ?, 0)'
                db.executeUpdate(insert_exploit, insert_exploit_ob)
                logger.info('POC {} Insert succeeded.'.format(poc_name))
            else:
                logger.warning('POC {} is already existed.'.format(poc_name))
        db.close()


if __name__ == '__main__':
    Exploit.get_exp()
